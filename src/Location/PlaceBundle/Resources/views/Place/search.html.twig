{{ include('LocationPlaceBundle::Banner/top.html.twig') }}

<div class="input-group bottom_space">
    <div class="input-group-btn">
        <button id="autocomplete_toogle" type="button" class="btn btn-lg btn-default dropdown-toggle" data-toggle="dropdown"><span class="title">{{ autocomplete_types.0.title }}</span> <span class="caret"></span></button>
        <ul class="dropdown-menu pull-left" id="autocomplete_option">
            {% for type in autocomplete_types %}
                <li data-autocomplete_type="{{type.value}}"><span class="extend">{{type.title}}</span></li>
            {% endfor %}
        </ul>
    </div>
    {{ autocomplete_view.html | raw }}
</div>

{{ autocomplete_view.js | raw }}
{{ google_map(map) }}
{{ include('LocationPlaceBundle::Social/bookmarks.html.twig') }}

<script type="text/javascript">
    $(document).ready(function() {
        var map = {{vars['map']}};
        var autocomplete = {{vars['autocomplete']}};
        geocoder = new google.maps.Geocoder();

        google.maps.event.addListener(autocomplete, 'place_changed', function() {

            var place = autocomplete.getPlace();

            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(16);
            }

            var marker = new google.maps.Marker({
                position: place.geometry.location
            });

            marker.setMap(map);

            place.url = [];

            function convertLatLngValue(key,value)
            {
                if (key=="lat" || key=="lng") {
                    return value();
                }
                else
                    return value;
            }

            geocoder.geocode({'latLng': place.geometry.location}, function(results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    $.ajax({
                        type: "POST",
                        data: "place="+JSON.stringify(place,convertLatLngValue,4)+"&location="+JSON.stringify(results,convertLatLngValue,4),
                        url: "{{ path('location_place_add') }}",
                        dataType: "json",
                        async: false,
                        success: function(data) {
                            if(data.html.length>0){

                                var infowindow = new google.maps.InfoWindow({
                                    content: data.html
                                });

                                infowindow.open(map,marker);
                            }
                        }
                    })
                }
            });
        });

        $('#autocomplete_option li').click(function(){
            var types = [];
            if($(this).data('autocomplete_type')){
                types = [''+$(this).data('autocomplete_type')+''];
            }
            autocomplete.setTypes(types);
            $('#autocomplete_toogle').find('.title').text($(this).text());
        });
    });
</script>


